%%% This file has been annotated, all annotations start with %%%
%%% James Speers 
%%% Nov 11 2018
%%% CSC 345-80
%%% taz/js637496/CSC345/ML-Hmwk-1/run.txt 

%%% Load flip function
val flip = fn : 'a list -> 'a list
val it = () : unit
%%% Part 1 runs
- flip [1];
val it = [1] : int list
- flip [1,2,3,4];
val it = [2,1,4,3] : int list
- flip [1,2,3,4,5];
val it = [2,1,4,3,5] : int list
- flip [1.0,2.0,3.0,4.0,5.0];
val it = [2.0,1.0,4.0,3.0,5.0] : real list

%%% Load deleteIth and deleteIthHelper functions
val deleteIthHelper = fn : 'a list * int -> 'a list
val it = () : unit

val deleteIth = fn : 'a list * int -> 'a list
val it = () : unit

%%% Part 2 runs
- deleteIth ([1], 1);
val it = [] : int list
- deleteIth ([1,2], 1);
val it = [2] : int list
- deleteIth ([1,2,3,4,5], 3);
val it = [1,2,4,5] : int list
- deleteIth ([1,2,3,4,5], 6);
val it = [1,2,3,4,5] : int list

%%% Load piglantize and assoicated helper functions:
%%% vowelCheck, hasVowel, piglatinizeVowel, piglatinizeNonVowel
val vowelCheck = fn : char -> bool
val it = () : unit

val hasVowel = fn : char list -> bool
val it = () : unit

val piglatinizeVowel = fn : char list -> char list
val it = () : unit

val piglatinizeNonVowel = fn : char list -> char list
val it = () : unit

val piglatinizeExploded = fn : char list -> string
val it = () : unit

val piglatinize = fn : string -> string
val it = () : unit

%%% Part 3 runs
- piglatinize "able";
val it = "ableyay" : string
- piglatinize "stripe";
val it = "ipestray" : string
- piglatinize "hello";
val it = "ellohay" : string
- piglatinize "emacs";
val it = "emacsyay" : string
- piglatinize "vi";
val it = "ivay" : string
- piglatinize "nnnnnnn";
val it = "nnnnnnn" : string
- 
